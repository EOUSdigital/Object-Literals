//TODO  ✅ Real-World Example Challenge

//* 🎯 Objective: Use everything you have learned — object creation, property access, mutation, checking, and nesting.

//? 🌍 Scenario: Student Enrollment Record
//  You are managing a student record in a university system. Here’s your starting data:

const student = {
    id: 101,
    name: 'Jane Smith',
    isEnrolled: true,
    courses: {
        math: 'A',
        science: 'B+',
    },
};

//? 🧠 Tasks:
//  1. Add a new property email with value 'jane.smith@university.edu'.
//  2. Update the science grade to 'A-'.
//  3. Add a new course history with grade 'B'.
//  4. Check if the student is enrolled.
//  5. Delete the id property.
//  6. Safely check if the student has a phone property — if not, set it to 'not provided'.

//! Solution

//* Step 1.

student.email = 'jane.smith@university.edu';

//* Step 2.

student.courses.science = 'A-';

//* Step 3.

student.courses.history = 'B';

//* Step 4.

console.log('isEnrolled' in student);

console.log(student.hasOwnProperty('isEnrolled'));

//* Step 5.

delete student.id;

//* Step 6.

if (!student?.phone) { console.log('not provided'); }

//! or

if (!student?.phone) { student.phone = 'not provided'; }
